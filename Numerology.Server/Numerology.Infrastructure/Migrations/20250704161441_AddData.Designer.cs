//// <auto-generated />
//using System;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
//using Numerology.Infrastructure.Data;

//#nullable disable

//namespace Numerology.Infrastructure.Migrations
//{
//    [DbContext(typeof(ApplicationDBContext))]
//    [Migration("20250704161441_AddData")]
//    partial class AddData
//    {
//        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "8.0.2")
//                .HasAnnotation("Relational:MaxIdentifierLength", 64);

//            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .HasColumnType("longtext");

//                    b.Property<string>("Name")
//                        .HasColumnType("longtext");

//                    b.Property<string>("NormalizedName")
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.ToTable("Roles");

//                    b.HasData(
//                        new
//                        {
//                            Id = "8cf89f78-6561-4a8e-b121-5c5e87c3913b",
//                            Name = "SubAgent",
//                            NormalizedName = "SUBAGENT"
//                        },
//                        new
//                        {
//                            Id = "a84968cc-bda4-4633-a0ca-46e4ace734da",
//                            Name = "GeneralAgent",
//                            NormalizedName = "GENERALAGENT"
//                        });
//                });

//            modelBuilder.Entity("Numerology.Core.Models.Entities.Bets", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<decimal>("Amount")
//                        .HasColumnType("decimal(65,30)");

//                    b.Property<DateTimeOffset>("Created")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("CreatedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTimeOffset>("LastModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("LastModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("NameUser")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<int>("Number")
//                        .HasColumnType("int");

//                    b.HasKey("Id");

//                    b.ToTable("tblBets", (string)null);
//                });

//            modelBuilder.Entity("Numerology.Core.Models.Entities.LotteryResult", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("char(36)");

//                    b.Property<DateTimeOffset>("Created")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("CreatedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<DateTime>("Date")
//                        .HasColumnType("datetime(6)");

//                    b.Property<DateTimeOffset>("LastModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("LastModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<int>("Prize1")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize2_1")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize2_2")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize3_1")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize3_2")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize3_3")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize3_4")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize3_5")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize3_6")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize4_1")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize4_2")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize4_3")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize4_4")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize5_1")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize5_2")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize5_3")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize5_4")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize5_5")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize5_6")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize6_1")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize6_2")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize6_3")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize7_1")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize7_2")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize7_3")
//                        .HasColumnType("int");

//                    b.Property<int>("Prize7_4")
//                        .HasColumnType("int");

//                    b.Property<int>("Special")
//                        .HasColumnType("int");

//                    b.HasKey("Id");

//                    b.HasIndex("Created")
//                        .IsUnique();

//                    b.ToTable("tblLotteryResult", (string)null);
//                });

//            modelBuilder.Entity("Numerology.Core.Models.Entities.User", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("varchar(255)");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("int");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("longtext");

//                    b.Property<DateTimeOffset>("Created")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("CreatedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<string>("Email")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("FullName")
//                        .HasColumnType("longtext");

//                    b.Property<DateTimeOffset>("LastModified")
//                        .HasColumnType("datetime(6)");

//                    b.Property<Guid?>("LastModifiedBy")
//                        .HasColumnType("char(36)");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("NormalizedEmail")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("NormalizedUserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("longtext");

//                    b.Property<string>("PhoneNumber")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("RefreshToken")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("varchar(100)");

//                    b.Property<DateTime>("RefreshTokenExpiryTime")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("RoleId")
//                        .HasColumnType("varchar(255)");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("longtext");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("UserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("varchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedEmail")
//                        .HasDatabaseName("EmailIndex");

//                    b.HasIndex("NormalizedUserName")
//                        .IsUnique()
//                        .HasDatabaseName("UserNameIndex");

//                    b.HasIndex("RoleId");

//                    b.ToTable("tblUsers", (string)null);
//                });

//            modelBuilder.Entity("Numerology.Core.Models.Entities.User", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.SetNull);

//                    b.Navigation("Role");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
